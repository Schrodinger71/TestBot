import asyncio
import functools

from disnake import AppCommandInteraction, Embed

from bot_init import bot
from modules.send_log_to_channel import log_to_channel

@bot.event
async def on_slash_command(interaction: AppCommandInteraction, result=None):
    """
    –õ–æ–≥–∏—Ä—É–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥—ã –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª
    
    :param interaction: –û–±—ä–µ–∫—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –∫–æ–º–∞–Ω–¥—ã
    :param result: –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    """
    try:
        message = await interaction.original_message()
        message_url = f"https://discord.com/channels/{interaction.guild_id}/{interaction.channel_id}/{message.id}"
    except Exception:
        message_url = f"https://discord.com/channels/{interaction.guild_id}/{interaction.channel_id}"

    user = interaction.user
    guild = interaction.guild
    command_name = interaction.application_command.name
    options = interaction.data.get("options", [])

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
    args_str = ", ".join(
        f"{opt['name']}={opt['value']}" 
        for opt in options
        if isinstance(opt, dict) and 'name' in opt and 'value' in opt
    ) or "–±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤"

    embed = Embed(
        title=f"–ö–æ–º–∞–Ω–¥–∞: /{command_name}",
        color=0x2f3136,
        timestamp=interaction.created_at,
    )
    
    embed.description = (
        f"üë§ {user} (`{user.id}`)\n"
        f"üìÅ {guild.name if guild else 'DM'} / "
        f"{getattr(interaction.channel, 'name', 'N/A')}\n"
        f"üìù –ê—Ä–≥—É–º–µ–Ω—Ç—ã: {args_str}\n"
        f"[–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é]({message_url})"
    )

    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    if result is not None:
        embed.add_field(name="–†–µ–∑—É–ª—å—Ç–∞—Ç", value=str(result)[:1000], inline=False)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥ (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ log_to_channel —É–∂–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω)
    await log_to_channel(
        bot=interaction.bot,
        message="",
        embed_obj=embed,
        title="slash_command"
    )
